{"version":3,"sources":["utils.js","AnimationLoopHelper.js","CanvasHelper.js","ConfigHelper.js","DeviceHelper.js","InputHelper.js","RendererHelper.js","UserInterfaceHelper.js","Application.js","Entity.js","Scene.js","GameOverScene.js","IdentScene.js","PlayingScene.js","TitleScene.js","BubbleEntity.js","bootstrap.js"],"names":["$","selector","elements","document","querySelectorAll","length","callNativeApp","message","webkit","messageHandlers","callbackHandler","postMessage","err","console","log","clamp","value","min","max","correctValueForDPR","integer","devicePixelRatio","Math","round","debugConsole","element","updateUITextNode","formatWithComma","num","toString","replace","fps","random","undefined","randomColor","r","randomInteger","g","b","floor","randomPercentage","rgba","color","alpha","innerHTML","AnimationLoopHelper","animationLoopId","delta","lastTime","now","App","update","window","requestAnimationFrame","frame","cancelAnimationFrame","CanvasHelper","device","getHelper","input","elementSelector","createCanvas","context","clearRect","width","height","querySelector","screen","realHeight","realWidth","getContext","globalCompositeOperation","scaleCanvas","addCanvasTapEventListener","backingStoreRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","ratio","oldWidth","oldHeight","style","scale","ConfigHelper","values","path","get","dumping","split","array","index","key","nextKey","DeviceHelper","body","clientHeight","clientWidth","android","Boolean","navigator","userAgent","match","ios","hasTouchEvents","hasOwnProperty","InputHelper","cancelTouchMoveEvents","entityIds","entitiesToTest","entitiesPendingRemoval","canvasSelector","addEventListener","testEntitiesForEvents","entity","push","id","type","callback","consoleOutput","convertClickToTouch","event","preventDefault","touchData","x","touches","pageX","y","pageY","clientX","clientY","removeEventListener","node","target","nodeName","toLowerCase","classList","Array","from","removeEntity","indexOf","splice","getTouchData","tapped","wasTapped","tapHandler","removeQueuedEntities","RendererHelper","renderStack","isInsideCanvasBounds","render","reset","UserInterfaceHelper","name","sceneName","targetSceneID","instant","targetScene","scenes","currentScene","unload","load","updateBodyClass","className","add","Application","helpers","backgroundScenes","initHelpers","initScenes","start","transitionTo","animationLoop","object","canvas","config","renderer","ui","helper","loaded","loadHelper","ident","IdentScene","GameOverScene","playing","PlayingScene","title","TitleScene","sceneObject","updatesInBackGround","clear","backgroundScene","process","Entity","parent","removeOnCanvasExit","position","velocity","enqueue","isOutsideCanvasBounds","outsideLeft","outsideRight","outsideX","outsideTop","outsideBottom","realWheight","outsideY","canvasExitCallback","removeSelfFromParent","Scene","entitiesCount","entities","unshift","updateEntities","processEntitiesMarkedForRemoval","arguments","playAgainEventBound","setTimeout","levelUpInterval","maxLevel","maxDiameterAsPercentageOfScreen","maxLineWidth","pointsPerPop","registerElement","comboMultiplier","level","score","setupLevelUpIncrement","setHeadsUpValues","targetBubblesCount","setupDifficultyConfig","removeAllEntities","difficultyConfig","bubbleSpawnChance","current","bubbleConfig","newBubbleConfig","bubble","BubbleEntity","isTarget","addEntity","bubbleGrowthMultiplier","chanceBubbleIsTarget","diameterMax","maxTargetsAtOnce","minTargetDiameter","targetVelocityMultiplier","velocityMax","velocityMin","maxDiameter","easy","difficult","updateValuesForDifficulty","levelUpCounter","setInterval","updateLevel","clearInterval","destroying","stopLevelUpIncrement","generateBubble","targetHit","sizeWhenTapped","sizeWhenFullyGrown","targetSizeBonus","popPointValue","levelMultiplier","levelMulitplier","propertyName","propertyValues","valueDifference","adjustedValue","configValues","substr","diameter","fillColor","strokeColor","finalDiameter","determineTargetBubble","radius","shrinkMultiplier","lineWidth","gameOver","fillStyle","strokeStyle","beginPath","arc","PI","fill","stroke","closePath","updateComboMultiplier","updateScore","decrementTargetBubblesCount","queueEntityForRemoval","correctValue","addSelfToRenderQueue","tapX","tapY","distanceX","distanceY"],"mappings":"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","file":"application.js","sourcesContent":["/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst $ = function(selector) {\n  const elements = document.querySelectorAll(selector)\n\n  if (elements.length === 1) {\n    return elements[0]\n  }\n  return elements\n}\n\nconst callNativeApp = function(message) {\n  try {\n    return webkit.messageHandlers.callbackHandler.postMessage(message)\n  } catch (err) {\n    return console.log('The native context does not exist yet')\n  }\n}\n\nconst clamp = function(value, min, max) {\n  if (value < min) {\n    value = min\n  } else if (value > max) {\n    value = max\n  }\n\n  return value\n}\n\nconst correctValueForDPR = function(value, integer) {\n  if (integer == null) {\n    integer = false\n  }\n  value *= devicePixelRatio\n\n  if (integer) {\n    value = Math.round(value)\n  }\n\n  return value\n}\n\nconst debugConsole = function(message) {\n  const element = $('.debugConsole')\n\n  updateUITextNode(element, message)\n  console.log(message)\n  callNativeApp(message)\n}\n\nconst formatWithComma = num =>\n  num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\nconst fps = value => updateUITextNode($('.fps'), value)\n\nconst random = function(min, max) {\n  if (min === undefined) {\n    min = 0\n    max = 1\n  } else if (max === undefined) {\n    max = min\n    min = 0\n  }\n\n  return Math.random() * (max - min) + min\n}\n\nconst randomColor = function() {\n  const r = randomInteger(0, 200)\n  const g = randomInteger(0, 200)\n  const b = randomInteger(0, 200)\n\n  return `${r}, ${g}, ${b}`\n}\n\nvar randomInteger = function(min, max) {\n  if (max === undefined) {\n    max = min\n    min = 0\n  }\n\n  return Math.floor(Math.random() * (max + 1 - min)) + min\n}\n\nconst randomPercentage = () => Math.floor(Math.random() * 100)\n\nconst rgba = function(color, alpha) {\n  if (alpha == null) {\n    alpha = false\n  }\n  if (!alpha) {\n    alpha = 1\n  }\n\n  return `rgba(${color}, ${alpha})`\n}\n\nvar updateUITextNode = function(element, value) {\n  element.innerHTML = value\n\n  return this\n}\n","/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass AnimationLoopHelper {\n  load() {\n    this.animationLoopId = null\n    this.delta = 0\n    this.fps = 0\n    this.lastTime = 0\n\n    return this\n  }\n\n  correctValue(value) {\n    return value * this.delta * (60 / 1000)\n  }\n\n  frame(now) {\n    this.delta = now - this.lastTime\n    this.fps = Math.round(1000 / this.delta)\n    this.lastTime = now\n\n    fps(this.fps)\n\n    App.update(this.delta)\n\n    return (this.animationLoopId = window.requestAnimationFrame(now => {\n      this.frame(now)\n      return\n\n      return this\n    }))\n  }\n\n  start() {\n    this.frame()\n\n    return this\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationLoopId)\n\n    return this\n  }\n}\n","class CanvasHelper {\n  load() {\n    this.device = App.getHelper('device')\n    this.input = App.getHelper('input')\n\n    this.elementSelector = '.canvas'\n\n    this.createCanvas()\n\n    return this\n  }\n\n  clear() {\n    // @element.width = @element.width\n    this.context.clearRect(0, 0, this.element.width, this.element.height)\n\n    return this\n  }\n\n  createCanvas() {\n    this.element = document.querySelector(this.elementSelector)\n    this.element.height = this.device.screen.height\n    this.element.width = this.device.screen.width\n\n    this.element.realHeight = this.element.height\n    this.element.realWidth = this.element.width\n\n    this.context = this.element.getContext('2d')\n\n    this.context.globalCompositeOperation = 'destination-atop'\n\n    this.scaleCanvas()\n\n    this.input.addCanvasTapEventListener(this.elementSelector)\n\n    return this\n  }\n\n  scaleCanvas() {\n    const backingStoreRatio =\n      this.context.webkitBackingStorePixelRatio ||\n      this.context.backingStorePixelRatio ||\n      1\n\n    if (this.device.pixelRatio !== backingStoreRatio) {\n      const ratio = this.device.pixelRatio / backingStoreRatio\n      const oldWidth = this.element.width\n      const oldHeight = this.element.height\n\n      this.element.width = oldWidth * ratio\n      this.element.height = oldHeight * ratio\n\n      this.element.style.width = `${oldWidth}px`\n      this.element.style.height = `${oldHeight}px`\n\n      this.context.scale(ratio, ratio)\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass ConfigHelper {\n  load() {\n    this.values = {}\n\n    return this\n  }\n\n  console(path) {\n    debugConsole(this.get(path))\n\n    return this\n  }\n\n  dump(path) {\n    let dumping = this.values\n\n    if (path) {\n      dumping = `Config.${path}: ${this.get(path)}`\n    }\n\n    console.log(dumping)\n\n    return this\n  }\n\n  get(path) {\n    let value\n    path = path.split('.')\n    let array = this.values\n\n    for (let index = 0; index < path.length; index++) {\n      const key = path[index]\n      const nextKey = path[index + 1]\n\n      if (nextKey != null) {\n        array = array[key]\n      } else {\n        value = array[key]\n      }\n    }\n\n    if (value != null) {\n      return value\n    }\n  }\n\n  set(path, value) {\n    path = path.split('.')\n    let array = this.values\n\n    for (let index = 0; index < path.length; index++) {\n      const key = path[index]\n      const nextKey = path[index + 1]\n\n      if (!array[key]) {\n        if (nextKey != null) {\n          array[key] = {}\n        } else {\n          array[key] = value\n        }\n      }\n\n      array = array[key]\n    }\n\n    return this\n  }\n}\n","class DeviceHelper {\n  load() {\n    this.screen = {\n      height: document.body.clientHeight,\n      width: document.body.clientWidth,\n    }\n\n    this.android = Boolean(navigator.userAgent.match(/android/i))\n    this.ios = !this.android\n    this.hasTouchEvents =\n      window.hasOwnProperty('ontouchstart') ||\n      window.hasOwnProperty('onmsgesturechange')\n    this.pixelRatio = window.devicePixelRatio || 1\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass InputHelper {\n  constructor() {\n    this.device = new DeviceHelper()\n\n    this.cancelTouchMoveEvents()\n\n    // @setupConsole()\n\n    return this\n  }\n\n  load() {\n    this.entityIds = []\n    this.entitiesToTest = []\n    this.entitiesPendingRemoval = []\n\n    return this\n  }\n\n  addCanvasTapEventListener(canvasSelector) {\n    this.addEventListener(canvasSelector, 'click', () => {\n      this.testEntitiesForEvents()\n    })\n\n    return this\n  }\n\n  addEntity(entity) {\n    this.entityIds.push(entity.id)\n    this.entitiesToTest.push(entity)\n\n    return this\n  }\n\n  addEventListener(selector, type, callback, consoleOutput) {\n    if (selector == null) {\n      selector = 'body'\n    }\n    if (consoleOutput == null) {\n      consoleOutput = false\n    }\n    type = this.convertClickToTouch(type)\n\n    if (consoleOutput) {\n      debugConsole(`Input.addEventListener(${selector}, ${type}, ${callback})`)\n    }\n\n    $(selector).addEventListener(type, callback, false)\n\n    return this\n  }\n\n  cancelTouchMoveEvents() {\n    window.addEventListener('touchmove', function(event) {\n      event.preventDefault()\n    })\n\n    return this\n  }\n\n  convertClickToTouch(type) {\n    if (type === 'click' && this.device.hasTouchEvents) {\n      return 'touchstart'\n    }\n    return type\n  }\n\n  getTouchData(event) {\n    let touchData\n    if (this.device.hasTouchEvents) {\n      touchData = {\n        x: event.touches[0].pageX,\n        y: event.touches[0].pageY,\n      }\n    } else {\n      touchData = {\n        x: event.clientX,\n        y: event.clientY,\n      }\n    }\n\n    return touchData\n  }\n\n  removeEventListener(selector, type, callback) {\n    if (selector == null) {\n      selector = 'body'\n    }\n    type = this.convertClickToTouch(type)\n\n    debugConsole(`Input.removeEventListener(${selector}, ${type}, ${callback})`)\n\n    $(selector).removeEventListener(type, callback, false)\n\n    return this\n  }\n\n  setupConsole() {\n    this.addEventListener('body', 'click', function(event) {\n      const { type } = event\n      const node = event.target.nodeName.toLowerCase()\n      const id = event.target.id || 'n/a'\n      const classList = event.target.classList || 'n/a'\n\n      debugConsole(`${type} on ${node} - id: ${id} - class: ${classList}`)\n    })\n\n    return this\n  }\n\n  queueEntityForRemoval(id) {\n    this.entitiesPendingRemoval.push(id)\n\n    return this\n  }\n\n  removeAllEntities() {\n    this.entitiesToTest = []\n\n    return this\n  }\n\n  removeQueuedEntities() {\n    for (let id of Array.from(this.entitiesPendingRemoval)) {\n      this.removeEntity(id)\n    }\n\n    this.entitiesPendingRemoval = []\n\n    return this\n  }\n\n  removeEntity(id) {\n    const index = this.entityIds.indexOf(id)\n\n    if (index !== -1) {\n      this.entityIds.splice(index, 1)\n      this.entitiesToTest.splice(index, 1)\n    }\n\n    return this\n  }\n\n  testEntitiesForEvents() {\n    this.touchData = this.getTouchData(event)\n\n    for (let entity of Array.from(this.entitiesToTest)) {\n      const tapped = entity.wasTapped()\n\n      entity.tapHandler(tapped)\n    }\n\n    // break if tapped\n\n    this.removeQueuedEntities()\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass RendererHelper {\n  load() {\n    this.renderStack = []\n\n    return this\n  }\n\n  enqueue(entity) {\n    this.renderStack.push(entity)\n\n    return this\n  }\n\n  process() {\n    for (let entity of Array.from(this.renderStack)) {\n      if (entity.isInsideCanvasBounds()) {\n        entity.render()\n      }\n    }\n\n    this.reset()\n\n    return this\n  }\n\n  reset() {\n    this.renderStack = []\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass UserInterfaceHelper {\n  load() {\n    this.elements = {}\n\n    return this\n  }\n\n  element(name) {\n    return this.elements[name]\n  }\n\n  removeAllElements(sceneName) {\n    this.elements = {}\n\n    return this\n  }\n\n  registerElement(name, selector) {\n    this.elements[name] = $(selector)\n\n    return this\n  }\n\n  removeElement(name) {\n    if (this.elements[name] != null) {\n      delete this.elements[name]\n    }\n\n    return this\n  }\n\n  transitionTo(targetSceneID, instant) {\n    if (instant == null) {\n      instant = false\n    }\n    const targetScene = App.scenes[targetSceneID]\n\n    if (App.currentScene != null) {\n      App.currentScene.unload()\n    }\n    // @updateBodyClass(\"scene-#{targetSceneID}-out\")\n\n    targetScene.load()\n\n    this.updateBodyClass(`scene-${targetSceneID}`)\n\n    App.currentScene = targetScene\n\n    return this\n  }\n\n  updateBodyClass(className) {\n    document.body.className = ''\n    document.body.classList.add(className)\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Application {\n  constructor() {\n    this.currentScene = null\n    this.delta = 0\n    this.helpers = {}\n    this.scenes = {}\n    this.backgroundScenes = []\n\n    this.initHelpers()\n    this.initScenes()\n\n    return this\n  }\n\n  load() {\n    callNativeApp('PopRush Loaded! Aww Yeah!')\n\n    this.getHelper('animationLoop').start()\n    this.getHelper('ui').transitionTo('ident')\n\n    return this\n  }\n\n  initHelpers() {\n    this.helpers = {\n      animationLoop: { object: new AnimationLoopHelper() },\n      canvas: { object: new CanvasHelper() },\n      config: { object: new ConfigHelper() },\n      device: { object: new DeviceHelper() },\n      input: { object: new InputHelper() },\n      renderer: { object: new RendererHelper() },\n      ui: { object: new UserInterfaceHelper() },\n    }\n\n    for (let helper of Array.from(this.helpers)) {\n      if (!helper.loaded) {\n        this.loadHelper(helper)\n      }\n    }\n\n    return this\n  }\n\n  loadHelper(helper) {\n    if (helper.object.load !== null) {\n      console.log(helper.object)\n      helper.object.load()\n    }\n    helper.loaded = true\n\n    return this\n  }\n\n  initScenes() {\n    this.scenes = {\n      ident: new IdentScene(),\n      'game-over': new GameOverScene(),\n      playing: new PlayingScene(),\n      title: new TitleScene(),\n    }\n\n    for (let sceneName in this.scenes) {\n      const sceneObject = this.scenes[sceneName]\n      if (sceneObject.updatesInBackGround) {\n        this.backgroundScenes.push(sceneObject)\n      }\n    }\n\n    return this\n  }\n\n  getHelper(name) {\n    const helper = this.helpers[name]\n\n    if (!helper.loaded) {\n      this.loadHelper(helper)\n    }\n\n    return helper.object\n  }\n\n  update(delta) {\n    this.delta = delta\n\n    if (this.currentScene != null) {\n      this.getHelper('canvas').clear()\n      this.currentScene.update()\n\n      for (let backgroundScene of Array.from(this.backgroundScenes)) {\n        if (backgroundScene.id !== this.currentScene.id) {\n          backgroundScene.update()\n        }\n      }\n\n      this.getHelper('renderer').process()\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Entity {\n  constructor() {\n    this.animationLoop = App.getHelper('animationLoop')\n    this.canvas = App.getHelper('canvas')\n    this.config = App.getHelper('config')\n    this.input = App.getHelper('input')\n    this.device = App.getHelper('device')\n    this.renderer = App.getHelper('renderer')\n\n    this.context = this.canvas.context\n\n    this.id = null\n    this.parent = null\n    this.removeOnCanvasExit = true\n\n    this.height = 0\n    this.width = 0\n\n    this.position = {\n      x: 0,\n      y: 0,\n    }\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n    }\n\n    return this\n  }\n\n  addSelfToRenderQueue() {\n    this.renderer.enqueue(this)\n\n    return this\n  }\n\n  canvasExitCallback() {\n    return this\n  }\n\n  isInsideCanvasBounds() {\n    return !this.isOutsideCanvasBounds()\n  }\n\n  isOutsideCanvasBounds() {\n    const outsideLeft = this.position.x < -this.width\n    const outsideRight =\n      this.position.x - this.width > this.canvas.element.realWidth\n    const outsideX = outsideLeft || outsideRight\n    const outsideTop = this.position.y < -this.height\n    const outsideBottom =\n      this.position.y - this.height > this.canvas.element.realWheight\n    const outsideY = outsideTop || outsideBottom\n\n    return outsideX || outsideY\n  }\n\n  removeSelfFromParent() {\n    if (this.parent != null) {\n      this.parent.removeEntity(this.id)\n    }\n\n    return this\n  }\n\n  update() {\n    if (this.isOutsideCanvasBounds()) {\n      if (this.canvasExitCallback != null) {\n        this.canvasExitCallback()\n      }\n      if (this.removeOnCanvasExit) {\n        this.removeSelfFromParent()\n      }\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Scene {\n  constructor() {\n    this.entitiesCount = 0\n    this.entityIds = []\n    this.entities = []\n    this.entitiesPendingRemoval = []\n    this.updatesInBackGround = false\n\n    return this\n  }\n\n  addEntity(entity, unshift) {\n    if (unshift === null) {\n      this.entityIds.push(entity.id)\n      this.entities.push(entity)\n    } else {\n      this.entityIds.unshift(entity.id)\n      this.entities.unshift(entity)\n    }\n\n    this.entitiesCount += 1\n\n    return this\n  }\n\n  load() {\n    this.config = App.getHelper('config')\n    this.device = App.getHelper('device')\n    this.input = App.getHelper('input')\n    this.ui = App.getHelper('ui')\n\n    return this\n  }\n\n  removeAllEntities() {\n    this.entitiesCount = 0\n    this.entities = []\n    this.entityIds = []\n\n    return this\n  }\n\n  removeEntity(id) {\n    this.entitiesPendingRemoval.push(id)\n\n    return this\n  }\n\n  unload() {\n    // @removeAllEntities()\n\n    return this\n  }\n\n  update() {\n    if (this.entitiesCount > 0) {\n      this.updateEntities()\n\n      this.processEntitiesMarkedForRemoval()\n    }\n\n    return this\n  }\n\n  updateEntities() {\n    for (let entity of Array.from(this.entities)) {\n      entity.update()\n    }\n\n    return this\n  }\n\n  processEntitiesMarkedForRemoval() {\n    for (let id of Array.from(this.entitiesPendingRemoval)) {\n      const index = this.entityIds.indexOf(id)\n\n      this.entities.splice(index, 1)\n      this.entityIds.splice(index, 1)\n\n      this.entitiesCount -= 1\n    }\n\n    this.entitiesPendingRemoval = []\n\n    if (this.entitiesCount < 0) {\n      return (this.entitiesCount = 0)\n    }\n  }\n}\n","class GameOverScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'game-over'\n    this.playAgainEventBound = false\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.input.addEventListener('.play-again', 'click', () => {\n      this.ui.transitionTo('playing')\n    })\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass IdentScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'ident'\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    window.setTimeout(() => {\n      return this.ui.transitionTo('title')\n    }, 2500)\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass PlayingScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'playing'\n    this.updatesInBackGround = true\n    this.levelUpInterval = 5000\n    this.maxLevel = 50\n    this.maxDiameterAsPercentageOfScreen = 15\n    this.maxLineWidth = 5\n    this.pointsPerPop = 10\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.ui.registerElement('comboMultiplierCounter', '.hud-value-combo')\n    this.ui.registerElement('levelCounter', '.hud-value-level')\n    this.ui.registerElement('scoreCounter', '.hud-value-score')\n\n    this.comboMultiplier = 0\n    this.level = 1\n    this.score = 0\n\n    this.setupLevelUpIncrement()\n\n    this.setHeadsUpValues()\n\n    this.targetBubblesCount = 0\n\n    this.playing = true\n\n    this.setupDifficultyConfig()\n\n    return this\n  }\n\n  decrementTargetBubblesCount() {\n    this.targetBubblesCount -= 1\n\n    if (this.targetBubblesCount < 0) {\n      this.targetBubblesCount = 0\n    }\n\n    return this\n  }\n\n  gameOver() {\n    this.ui.transitionTo('game-over')\n    this.input.removeAllEntities()\n\n    return this\n  }\n\n  generateBubble() {\n    if (\n      this.playing &&\n      randomPercentage() < this.difficultyConfig.bubbleSpawnChance.current\n    ) {\n      const bubbleConfig = this.newBubbleConfig()\n      const bubble = new BubbleEntity(this, bubbleConfig)\n\n      if (bubble.isTarget) {\n        this.addEntity(bubble)\n        this.input.addEntity(bubble)\n      } else {\n        this.addEntity(bubble, true)\n      }\n\n      if (bubble.isTarget) {\n        this.targetBubblesCount += 1\n      }\n    }\n\n    return this\n  }\n\n  newBubbleConfig() {\n    return {\n      bubbleGrowthMultiplier: this.difficultyConfig.bubbleGrowthMultiplier\n        .current,\n      chanceBubbleIsTarget: this.difficultyConfig.chanceBubbleIsTarget.current,\n      diameterMax: this.difficultyConfig.diameterMax.current,\n      maxTargetsAtOnce: this.difficultyConfig.maxTargetsAtOnce.current,\n      minTargetDiameter: this.difficultyConfig.minTargetDiameter.current,\n      targetVelocityMultiplier: this.difficultyConfig.targetVelocityMultiplier\n        .current,\n      velocityMax: this.difficultyConfig.velocityMax.current,\n      velocityMin: this.difficultyConfig.velocityMin.current,\n      maxLineWidth: this.maxLineWidth,\n      playing: this.playing,\n      targetBubblesCount: this.targetBubblesCount,\n    }\n  }\n\n  setupDifficultyConfig() {\n    const maxDiameter =\n      this.device.screen.width / 100 * this.maxDiameterAsPercentageOfScreen\n\n    this.difficultyConfig = {\n      bubbleGrowthMultiplier: { current: 0, easy: 1.05, difficult: 1.1 },\n      bubbleSpawnChance: { current: 0, easy: 60, difficult: 100 },\n      chanceBubbleIsTarget: { current: 0, easy: 50, difficult: 90 },\n      diameterMax: {\n        current: 0,\n        easy: maxDiameter,\n        difficult: maxDiameter * 0.6,\n      },\n      maxTargetsAtOnce: { current: 0, easy: 3, difficult: 6 },\n      minTargetDiameter: {\n        current: 0,\n        easy: maxDiameter * 0.7,\n        difficult: maxDiameter * 0.4,\n      },\n      targetVelocityMultiplier: { current: 0, easy: 0.3, difficult: 0.5 },\n      velocityMax: { current: 0, easy: 4, difficult: 7 },\n      velocityMin: { current: 0, easy: -4, difficult: -7 },\n    }\n\n    this.updateValuesForDifficulty()\n\n    return this\n  }\n\n  setHeadsUpValues() {\n    updateUITextNode(\n      this.ui.element('comboMultiplierCounter'),\n      this.comboMultiplier,\n    )\n    updateUITextNode(this.ui.element('levelCounter'), this.level)\n    updateUITextNode(\n      this.ui.element('scoreCounter'),\n      formatWithComma(this.score),\n    )\n\n    return this\n  }\n\n  setupLevelUpIncrement() {\n    this.levelUpCounter = window.setInterval(() => {\n      this.updateLevel()\n    }, this.levelUpInterval)\n\n    return this\n  }\n\n  stopLevelUpIncrement() {\n    window.clearInterval(this.levelUpCounter)\n\n    return this\n  }\n\n  unload() {\n    if (this.playing === true) {\n      for (let bubble of Array.from(this.entities)) {\n        bubble.destroying = true\n      }\n\n      this.playing = false\n\n      return this.stopLevelUpIncrement()\n    }\n  }\n\n  update() {\n    super.update(...arguments)\n\n    this.generateBubble()\n\n    return this\n  }\n\n  updateComboMultiplier(targetHit) {\n    if (targetHit) {\n      this.comboMultiplier += 1\n    } else {\n      this.comboMultiplier = 0\n    }\n\n    this.setHeadsUpValues()\n\n    return this\n  }\n\n  updateLevel() {\n    this.level += 1\n\n    if (this.level >= this.maxLevel) {\n      window.clearInterval(this.levelUpCounter)\n    }\n\n    this.setHeadsUpValues()\n\n    this.updateValuesForDifficulty()\n\n    return this\n  }\n\n  updateScore(sizeWhenTapped, sizeWhenFullyGrown) {\n    // ((defaultScorePerPop + (100 - ((sizeWhenTapped / sizeWhenFullyGrown) * 100))) * comboMultiplier) * (levelNumber + 1)\n\n    const targetSizeBonus = Math.round(\n      100 - sizeWhenTapped / sizeWhenFullyGrown * 100,\n    )\n    const popPointValue = this.pointsPerPop + targetSizeBonus\n    const levelMultiplier = this.level + 1\n\n    this.score += popPointValue * this.comboMultiplier * levelMultiplier\n\n    this.setHeadsUpValues()\n\n    return this\n  }\n\n  updateValuesForDifficulty() {\n    const levelMulitplier = this.level / this.maxLevel\n\n    for (let propertyName in this.difficultyConfig) {\n      const propertyValues = this.difficultyConfig[propertyName]\n      const valueDifference = propertyValues.difficult - propertyValues.easy\n      const adjustedValue =\n        valueDifference * levelMulitplier + propertyValues.easy\n\n      this.difficultyConfig[propertyName].current = adjustedValue\n    }\n\n    return this\n  }\n}\n","class TitleScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'title'\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.input.addEventListener('.game-logo', 'click', () => {\n      this.ui.transitionTo('playing')\n    })\n\n    return this\n  }\n\n  unload() {\n    super.unload(...arguments)\n\n    return this\n  }\n}\n","class BubbleEntity extends Entity {\n  constructor(parent, configValues) {\n    super(...arguments)\n\n    this.parent = parent\n    this.configValues = configValues\n\n    this.height = 0\n    this.id = `bubble_${Math.random()\n      .toString(36)\n      .substr(2, 5)}`\n    this.position = {\n      x: this.device.screen.width / 2,\n      y: this.device.screen.height / 2,\n    }\n    this.velocity = {\n      x: random(this.configValues.velocityMin, this.configValues.velocityMax),\n      y: random(this.configValues.velocityMin, this.configValues.velocityMax),\n    }\n    this.width = 0\n\n    this.alpha = 0.75\n    this.color = randomColor()\n    this.destroying = false\n    this.diameter = 1\n    this.fillColor = this.color\n    this.strokeColor = this.color\n    this.finalDiameter = randomInteger(0, configValues.diameterMax)\n    this.isTarget = this.determineTargetBubble()\n    this.radius = 0.5\n    this.shrinkMultiplier = 0.9\n\n    if (this.isTarget) {\n      this.alpha = 0.9\n      this.fillColor = '240, 240, 240'\n      this.finalDiameter = randomInteger(\n        this.configValues.minTargetDiameter,\n        this.configValues.diameterMax,\n      )\n      this.lineWidth = this.diameter / 10\n\n      this.velocity.x *= this.configValues.targetVelocityMultiplier\n      this.velocity.y *= this.configValues.targetVelocityMultiplier\n    }\n\n    return this\n  }\n\n  canvasExitCallback() {\n    super.canvasExitCallback(...arguments)\n\n    if (this.isTarget) {\n      this.parent.gameOver()\n    }\n\n    return this\n  }\n\n  determineTargetBubble() {\n    if (\n      this.configValues.targetBubblesCount < this.configValues.maxTargetsAtOnce\n    ) {\n      return randomPercentage() < this.configValues.chanceBubbleIsTarget\n    }\n\n    return false\n  }\n\n  render() {\n    this.context.lineWidth = this.lineWidth\n    this.context.fillStyle = rgba(this.fillColor, this.alpha)\n    this.context.strokeStyle = rgba(this.strokeColor, this.alpha)\n\n    this.context.beginPath()\n    this.context.arc(\n      this.position.x,\n      this.position.y,\n      this.radius,\n      0,\n      Math.PI * 2,\n      true,\n    )\n    this.context.fill()\n    if (this.isTarget) {\n      this.context.stroke()\n    }\n    this.context.closePath()\n\n    return this\n  }\n\n  tapHandler(targetHit) {\n    this.parent.updateComboMultiplier(targetHit)\n\n    if (targetHit) {\n      this.parent.updateScore(this.diameter, this.finalDiameter)\n      this.destroying = true\n      this.parent.decrementTargetBubblesCount()\n      this.input.queueEntityForRemoval(this.id)\n    }\n\n    return this\n  }\n\n  update() {\n    super.update(...arguments)\n\n    if (this.destroying) {\n      this.diameter *= this.parent.playing ? 0.6 : this.shrinkMultiplier\n\n      if (this.diameter < 1) {\n        this.removeSelfFromParent()\n      }\n    } else if (this.diameter < this.finalDiameter) {\n      this.diameter *= this.configValues.bubbleGrowthMultiplier\n    }\n\n    this.diameter = clamp(this.diameter, 0, this.finalDiameter)\n    if (this.isTarget) {\n      this.lineWidth = clamp(\n        this.diameter / 10,\n        0,\n        this.configValues.maxLineWidth,\n      )\n    }\n\n    this.height = this.diameter\n    this.width = this.diameter\n    this.radius = this.diameter / 2\n\n    this.position.x += this.animationLoop.correctValue(this.velocity.x)\n    this.position.y += this.animationLoop.correctValue(this.velocity.y)\n\n    this.addSelfToRenderQueue()\n\n    return this\n  }\n\n  wasTapped() {\n    let message\n    const { touchData } = this.input\n\n    const tapX = touchData.x\n    const tapY = touchData.y\n    const distanceX = tapX - this.position.x\n    const distanceY = tapY - this.position.y\n    const tapped =\n      distanceX * distanceX + distanceY * distanceY < this.radius * this.radius\n\n    if (tapped) {\n      message = `Bubble#${this.id} tapped at ${tapX}, ${tapY}`\n    } else {\n      message = 'Combo Broken!'\n    }\n\n    debugConsole(message)\n\n    return tapped\n  }\n}\n","// Load the main app wrapper\nconst App = new Application()\n\n// Get up get on get up get on up stay on the scene etc etc\nApp.load()\n"]}