{"version":3,"sources":["utils.js","AnimationLoopHelper.js","CanvasHelper.js","ConfigHelper.js","DeviceHelper.js","InputHelper.js","RendererHelper.js","UserInterfaceHelper.js","Application.js","Entity.js","Scene.js","GameOverScene.js","IdentScene.js","PlayingScene.js","TitleScene.js","BubbleEntity.js","bootstrap.js"],"names":["$","selector","elements","document","querySelectorAll","length","callNativeApp","message","webkit","messageHandlers","callbackHandler","postMessage","err","console","log","clamp","value","min","max","correctValueForDPR","integer","devicePixelRatio","Math","round","debugConsole","element","updateUITextNode","formatWithComma","num","toString","replace","fps","random","undefined","randomColor","randomInteger","floor","randomPercentage","rgba","color","alpha","innerHTML","this","AnimationLoopHelper","_classCallCheck","animationLoopId","delta","lastTime","now","_this","App","update","window","requestAnimationFrame","frame","cancelAnimationFrame","CanvasHelper","device","getHelper","input","elementSelector","createCanvas","context","clearRect","width","height","querySelector","screen","realHeight","realWidth","getContext","globalCompositeOperation","scaleCanvas","addCanvasTapEventListener","backingStoreRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","ratio","oldWidth","oldHeight","style","scale","ConfigHelper","values","path","get","dumping","split","array","index","key","nextKey","DeviceHelper","body","clientHeight","clientWidth","android","Boolean","navigator","userAgent","match","ios","hasTouchEvents","hasOwnProperty","InputHelper","cancelTouchMoveEvents","entityIds","entitiesToTest","entitiesPendingRemoval","canvasSelector","addEventListener","testEntitiesForEvents","entity","push","id","type","callback","consoleOutput","convertClickToTouch","event","preventDefault","x","touches","pageX","y","pageY","clientX","clientY","removeEventListener","node","target","nodeName","toLowerCase","classList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Array","from","Symbol","iterator","next","done","removeEntity","return","indexOf","splice","touchData","getTouchData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tapped","wasTapped","tapHandler","removeQueuedEntities","RendererHelper","renderStack","isInsideCanvasBounds","render","reset","UserInterfaceHelper","name","sceneName","targetSceneID","instant","targetScene","scenes","currentScene","unload","load","updateBodyClass","className","add","Application","helpers","backgroundScenes","initHelpers","initScenes","start","transitionTo","animationLoop","object","canvas","config","renderer","ui","helper","loaded","loadHelper","ident","IdentScene","game-over","GameOverScene","playing","PlayingScene","title","TitleScene","sceneObject","updatesInBackGround","clear","backgroundScene","process","Entity","parent","removeOnCanvasExit","position","velocity","enqueue","isOutsideCanvasBounds","outsideLeft","outsideRight","outsideX","outsideTop","outsideBottom","realWheight","outsideY","canvasExitCallback","removeSelfFromParent","Scene","entitiesCount","entities","unshift","updateEntities","processEntitiesMarkedForRemoval","_ret","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","playAgainEventBound","_this2","_get","prototype","setTimeout","levelUpInterval","maxLevel","maxDiameterAsPercentageOfScreen","maxLineWidth","pointsPerPop","registerElement","comboMultiplier","level","score","setupLevelUpIncrement","setHeadsUpValues","targetBubblesCount","setupDifficultyConfig","removeAllEntities","difficultyConfig","bubbleSpawnChance","current","bubbleConfig","newBubbleConfig","bubble","BubbleEntity","isTarget","addEntity","bubbleGrowthMultiplier","chanceBubbleIsTarget","diameterMax","maxTargetsAtOnce","minTargetDiameter","targetVelocityMultiplier","velocityMax","velocityMin","maxDiameter","easy","difficult","updateValuesForDifficulty","levelUpCounter","setInterval","updateLevel","clearInterval","destroying","stopLevelUpIncrement","generateBubble","targetHit","sizeWhenTapped","sizeWhenFullyGrown","targetSizeBonus","popPointValue","levelMultiplier","levelMulitplier","propertyName","propertyValues","adjustedValue","configValues","substr","diameter","fillColor","strokeColor","finalDiameter","determineTargetBubble","radius","shrinkMultiplier","lineWidth","gameOver","fillStyle","strokeStyle","beginPath","arc","PI","fill","stroke","closePath","updateComboMultiplier","updateScore","decrementTargetBubblesCount","queueEntityForRemoval","correctValue","addSelfToRenderQueue","tapX","tapY","distanceX","distanceY"],"mappings":"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","file":"application.js","sourcesContent":["/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst $ = function(selector) {\n  const elements = document.querySelectorAll(selector)\n\n  if (elements.length === 1) {\n    return elements[0]\n  }\n  return elements\n}\n\nconst callNativeApp = function(message) {\n  try {\n    return webkit.messageHandlers.callbackHandler.postMessage(message)\n  } catch (err) {\n    return console.log('The native context does not exist yet')\n  }\n}\n\nconst clamp = function(value, min, max) {\n  if (value < min) {\n    value = min\n  } else if (value > max) {\n    value = max\n  }\n\n  return value\n}\n\nconst correctValueForDPR = function(value, integer) {\n  if (integer == null) {\n    integer = false\n  }\n  value *= devicePixelRatio\n\n  if (integer) {\n    value = Math.round(value)\n  }\n\n  return value\n}\n\nconst debugConsole = function(message) {\n  const element = $('.debugConsole')\n\n  updateUITextNode(element, message)\n  console.log(message)\n  callNativeApp(message)\n}\n\nconst formatWithComma = num =>\n  num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\nconst fps = value => updateUITextNode($('.fps'), value)\n\nconst random = function(min, max) {\n  if (min === undefined) {\n    min = 0\n    max = 1\n  } else if (max === undefined) {\n    max = min\n    min = 0\n  }\n\n  return Math.random() * (max - min) + min\n}\n\nconst randomColor = function() {\n  const r = randomInteger(0, 200)\n  const g = randomInteger(0, 200)\n  const b = randomInteger(0, 200)\n\n  return `${r}, ${g}, ${b}`\n}\n\nvar randomInteger = function(min, max) {\n  if (max === undefined) {\n    max = min\n    min = 0\n  }\n\n  return Math.floor(Math.random() * (max + 1 - min)) + min\n}\n\nconst randomPercentage = () => Math.floor(Math.random() * 100)\n\nconst rgba = function(color, alpha) {\n  if (alpha == null) {\n    alpha = false\n  }\n  if (!alpha) {\n    alpha = 1\n  }\n\n  return `rgba(${color}, ${alpha})`\n}\n\nvar updateUITextNode = function(element, value) {\n  element.innerHTML = value\n\n  return this\n}\n","/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass AnimationLoopHelper {\n  constructor() {\n    this.animationLoopId = null\n    this.delta = 0\n    this.fps = 0\n    this.lastTime = 0\n\n    return this\n  }\n\n  correctValue(value) {\n    return value * this.delta * (60 / 1000)\n  }\n\n  frame(now) {\n    this.delta = now - this.lastTime\n    this.fps = Math.round(1000 / this.delta)\n    this.lastTime = now\n\n    fps(this.fps)\n\n    App.update(this.delta)\n\n    return (this.animationLoopId = window.requestAnimationFrame(now => {\n      this.frame(now)\n      return\n\n      return this\n    }))\n  }\n\n  start() {\n    this.frame()\n\n    return this\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationLoopId)\n\n    return this\n  }\n}\n","class CanvasHelper {\n  load() {\n    this.device = App.getHelper('device')\n    this.input = App.getHelper('input')\n\n    this.elementSelector = '.canvas'\n\n    this.createCanvas()\n\n    return this\n  }\n\n  clear() {\n    // @element.width = @element.width\n    this.context.clearRect(0, 0, this.element.width, this.element.height)\n\n    return this\n  }\n\n  createCanvas() {\n    this.element = document.querySelector(this.elementSelector)\n    this.element.height = this.device.screen.height\n    this.element.width = this.device.screen.width\n\n    this.element.realHeight = this.element.height\n    this.element.realWidth = this.element.width\n\n    this.context = this.element.getContext('2d')\n\n    this.context.globalCompositeOperation = 'destination-atop'\n\n    this.scaleCanvas()\n\n    this.input.addCanvasTapEventListener(this.elementSelector)\n\n    return this\n  }\n\n  scaleCanvas() {\n    const backingStoreRatio =\n      this.context.webkitBackingStorePixelRatio ||\n      this.context.backingStorePixelRatio ||\n      1\n\n    if (this.device.pixelRatio !== backingStoreRatio) {\n      const ratio = this.device.pixelRatio / backingStoreRatio\n      const oldWidth = this.element.width\n      const oldHeight = this.element.height\n\n      this.element.width = oldWidth * ratio\n      this.element.height = oldHeight * ratio\n\n      this.element.style.width = `${oldWidth}px`\n      this.element.style.height = `${oldHeight}px`\n\n      this.context.scale(ratio, ratio)\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass ConfigHelper {\n  load() {\n    this.values = {}\n\n    return this\n  }\n\n  console(path) {\n    debugConsole(this.get(path))\n\n    return this\n  }\n\n  dump(path) {\n    let dumping = this.values\n\n    if (path) {\n      dumping = `Config.${path}: ${this.get(path)}`\n    }\n\n    console.log(dumping)\n\n    return this\n  }\n\n  get(path) {\n    let value\n    path = path.split('.')\n    let array = this.values\n\n    for (let index = 0; index < path.length; index++) {\n      const key = path[index]\n      const nextKey = path[index + 1]\n\n      if (nextKey != null) {\n        array = array[key]\n      } else {\n        value = array[key]\n      }\n    }\n\n    if (value != null) {\n      return value\n    }\n  }\n\n  set(path, value) {\n    path = path.split('.')\n    let array = this.values\n\n    for (let index = 0; index < path.length; index++) {\n      const key = path[index]\n      const nextKey = path[index + 1]\n\n      if (!array[key]) {\n        if (nextKey != null) {\n          array[key] = {}\n        } else {\n          array[key] = value\n        }\n      }\n\n      array = array[key]\n    }\n\n    return this\n  }\n}\n","class DeviceHelper {\n  constructor() {\n    this.screen = {\n      height: document.body.clientHeight,\n      width: document.body.clientWidth,\n    }\n\n    this.android = Boolean(navigator.userAgent.match(/android/i))\n    this.ios = !this.android\n    this.hasTouchEvents =\n      window.hasOwnProperty('ontouchstart') ||\n      window.hasOwnProperty('onmsgesturechange')\n    this.pixelRatio = window.devicePixelRatio || 1\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass InputHelper {\n  constructor() {\n    this.device = new DeviceHelper()\n\n    this.cancelTouchMoveEvents()\n\n    // @setupConsole()\n\n    return this\n  }\n\n  load() {\n    this.entityIds = []\n    this.entitiesToTest = []\n    this.entitiesPendingRemoval = []\n\n    return this\n  }\n\n  addCanvasTapEventListener(canvasSelector) {\n    this.addEventListener(canvasSelector, 'click', () => {\n      this.testEntitiesForEvents()\n    })\n\n    return this\n  }\n\n  addEntity(entity) {\n    this.entityIds.push(entity.id)\n    this.entitiesToTest.push(entity)\n\n    return this\n  }\n\n  addEventListener(selector, type, callback, consoleOutput) {\n    if (selector == null) {\n      selector = 'body'\n    }\n    if (consoleOutput == null) {\n      consoleOutput = false\n    }\n    type = this.convertClickToTouch(type)\n\n    if (consoleOutput) {\n      debugConsole(`Input.addEventListener(${selector}, ${type}, ${callback})`)\n    }\n\n    $(selector).addEventListener(type, callback, false)\n\n    return this\n  }\n\n  cancelTouchMoveEvents() {\n    window.addEventListener('touchmove', function(event) {\n      event.preventDefault()\n    })\n\n    return this\n  }\n\n  convertClickToTouch(type) {\n    if (type === 'click' && this.device.hasTouchEvents) {\n      return 'touchstart'\n    }\n    return type\n  }\n\n  getTouchData(event) {\n    let touchData\n    if (this.device.hasTouchEvents) {\n      touchData = {\n        x: event.touches[0].pageX,\n        y: event.touches[0].pageY,\n      }\n    } else {\n      touchData = {\n        x: event.clientX,\n        y: event.clientY,\n      }\n    }\n\n    return touchData\n  }\n\n  removeEventListener(selector, type, callback) {\n    if (selector == null) {\n      selector = 'body'\n    }\n    type = this.convertClickToTouch(type)\n\n    debugConsole(`Input.removeEventListener(${selector}, ${type}, ${callback})`)\n\n    $(selector).removeEventListener(type, callback, false)\n\n    return this\n  }\n\n  setupConsole() {\n    this.addEventListener('body', 'click', function(event) {\n      const { type } = event\n      const node = event.target.nodeName.toLowerCase()\n      const id = event.target.id || 'n/a'\n      const classList = event.target.classList || 'n/a'\n\n      debugConsole(`${type} on ${node} - id: ${id} - class: ${classList}`)\n    })\n\n    return this\n  }\n\n  queueEntityForRemoval(id) {\n    this.entitiesPendingRemoval.push(id)\n\n    return this\n  }\n\n  removeAllEntities() {\n    this.entitiesToTest = []\n\n    return this\n  }\n\n  removeQueuedEntities() {\n    for (let id of Array.from(this.entitiesPendingRemoval)) {\n      this.removeEntity(id)\n    }\n\n    this.entitiesPendingRemoval = []\n\n    return this\n  }\n\n  removeEntity(id) {\n    const index = this.entityIds.indexOf(id)\n\n    if (index !== -1) {\n      this.entityIds.splice(index, 1)\n      this.entitiesToTest.splice(index, 1)\n    }\n\n    return this\n  }\n\n  testEntitiesForEvents() {\n    this.touchData = this.getTouchData(event)\n\n    for (let entity of Array.from(this.entitiesToTest)) {\n      const tapped = entity.wasTapped()\n\n      entity.tapHandler(tapped)\n    }\n\n    // break if tapped\n\n    this.removeQueuedEntities()\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass RendererHelper {\n  load() {\n    this.renderStack = []\n\n    return this\n  }\n\n  enqueue(entity) {\n    this.renderStack.push(entity)\n\n    return this\n  }\n\n  process() {\n    for (let entity of Array.from(this.renderStack)) {\n      if (entity.isInsideCanvasBounds()) {\n        entity.render()\n      }\n    }\n\n    this.reset()\n\n    return this\n  }\n\n  reset() {\n    this.renderStack = []\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass UserInterfaceHelper {\n  load() {\n    this.elements = {}\n\n    return this\n  }\n\n  element(name) {\n    return this.elements[name]\n  }\n\n  removeAllElements(sceneName) {\n    this.elements = {}\n\n    return this\n  }\n\n  registerElement(name, selector) {\n    this.elements[name] = $(selector)\n\n    return this\n  }\n\n  removeElement(name) {\n    if (this.elements[name] != null) {\n      delete this.elements[name]\n    }\n\n    return this\n  }\n\n  transitionTo(targetSceneID, instant) {\n    if (instant == null) {\n      instant = false\n    }\n    const targetScene = App.scenes[targetSceneID]\n\n    if (App.currentScene != null) {\n      App.currentScene.unload()\n    }\n    // @updateBodyClass(\"scene-#{targetSceneID}-out\")\n\n    targetScene.load()\n\n    this.updateBodyClass(`scene-${targetSceneID}`)\n\n    App.currentScene = targetScene\n\n    return this\n  }\n\n  updateBodyClass(className) {\n    document.body.className = ''\n    document.body.classList.add(className)\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Application {\n  constructor() {\n    this.currentScene = null\n    this.delta = 0\n    this.helpers = {}\n    this.scenes = {}\n    this.backgroundScenes = []\n\n    this.initHelpers()\n    this.initScenes()\n\n    return this\n  }\n\n  load() {\n    callNativeApp('PopRush Loaded! Aww Yeah!')\n\n    this.getHelper('animationLoop').start()\n    this.getHelper('ui').transitionTo('ident')\n\n    return this\n  }\n\n  initHelpers() {\n    this.helpers = {\n      animationLoop: { object: new AnimationLoopHelper() },\n      canvas: { object: new CanvasHelper() },\n      config: { object: new ConfigHelper() },\n      device: { object: new DeviceHelper() },\n      input: { object: new InputHelper() },\n      renderer: { object: new RendererHelper() },\n      ui: { object: new UserInterfaceHelper() },\n    }\n\n    for (let helper of Array.from(this.helpers)) {\n      if (!helper.loaded) {\n        this.loadHelper(helper)\n      }\n    }\n\n    return this\n  }\n\n  loadHelper(helper) {\n    if (helper.object.load !== null) {\n      helper.object.load()\n    }\n    helper.loaded = true\n\n    return this\n  }\n\n  initScenes() {\n    this.scenes = {\n      ident: new IdentScene(),\n      'game-over': new GameOverScene(),\n      playing: new PlayingScene(),\n      title: new TitleScene(),\n    }\n\n    for (let sceneName in this.scenes) {\n      const sceneObject = this.scenes[sceneName]\n      if (sceneObject.updatesInBackGround) {\n        this.backgroundScenes.push(sceneObject)\n      }\n    }\n\n    return this\n  }\n\n  getHelper(name) {\n    const helper = this.helpers[name]\n\n    if (!helper.loaded) {\n      this.loadHelper(helper)\n    }\n\n    return helper.object\n  }\n\n  update(delta) {\n    this.delta = delta\n\n    if (this.currentScene != null) {\n      this.getHelper('canvas').clear()\n      this.currentScene.update()\n\n      for (let backgroundScene of Array.from(this.backgroundScenes)) {\n        if (backgroundScene.id !== this.currentScene.id) {\n          backgroundScene.update()\n        }\n      }\n\n      this.getHelper('renderer').process()\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Entity {\n  constructor() {\n    this.animationLoop = App.getHelper('animationLoop')\n    this.canvas = App.getHelper('canvas')\n    this.config = App.getHelper('config')\n    this.input = App.getHelper('input')\n    this.device = App.getHelper('device')\n    this.renderer = App.getHelper('renderer')\n\n    this.context = this.canvas.context\n\n    this.id = null\n    this.parent = null\n    this.removeOnCanvasExit = true\n\n    this.height = 0\n    this.width = 0\n\n    this.position = {\n      x: 0,\n      y: 0,\n    }\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n    }\n\n    return this\n  }\n\n  addSelfToRenderQueue() {\n    this.renderer.enqueue(this)\n\n    return this\n  }\n\n  canvasExitCallback() {\n    return this\n  }\n\n  isInsideCanvasBounds() {\n    return !this.isOutsideCanvasBounds()\n  }\n\n  isOutsideCanvasBounds() {\n    const outsideLeft = this.position.x < -this.width\n    const outsideRight =\n      this.position.x - this.width > this.canvas.element.realWidth\n    const outsideX = outsideLeft || outsideRight\n    const outsideTop = this.position.y < -this.height\n    const outsideBottom =\n      this.position.y - this.height > this.canvas.element.realWheight\n    const outsideY = outsideTop || outsideBottom\n\n    return outsideX || outsideY\n  }\n\n  removeSelfFromParent() {\n    if (this.parent != null) {\n      this.parent.removeEntity(this.id)\n    }\n\n    return this\n  }\n\n  update() {\n    if (this.isOutsideCanvasBounds()) {\n      if (this.canvasExitCallback != null) {\n        this.canvasExitCallback()\n      }\n      if (this.removeOnCanvasExit) {\n        this.removeSelfFromParent()\n      }\n    }\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Scene {\n  constructor() {\n    this.entitiesCount = 0\n    this.entityIds = []\n    this.entities = []\n    this.entitiesPendingRemoval = []\n    this.updatesInBackGround = false\n\n    return this\n  }\n\n  addEntity(entity, unshift) {\n    if (unshift === null) {\n      this.entityIds.push(entity.id)\n      this.entities.push(entity)\n    } else {\n      this.entityIds.unshift(entity.id)\n      this.entities.unshift(entity)\n    }\n\n    this.entitiesCount += 1\n\n    return this\n  }\n\n  load() {\n    this.config = App.getHelper('config')\n    this.device = App.getHelper('device')\n    this.input = App.getHelper('input')\n    this.ui = App.getHelper('ui')\n\n    return this\n  }\n\n  removeAllEntities() {\n    this.entitiesCount = 0\n    this.entities = []\n    this.entityIds = []\n\n    return this\n  }\n\n  removeEntity(id) {\n    this.entitiesPendingRemoval.push(id)\n\n    return this\n  }\n\n  unload() {\n    // @removeAllEntities()\n\n    return this\n  }\n\n  update() {\n    if (this.entitiesCount > 0) {\n      this.updateEntities()\n\n      this.processEntitiesMarkedForRemoval()\n    }\n\n    return this\n  }\n\n  updateEntities() {\n    for (let entity of Array.from(this.entities)) {\n      entity.update()\n    }\n\n    return this\n  }\n\n  processEntitiesMarkedForRemoval() {\n    for (let id of Array.from(this.entitiesPendingRemoval)) {\n      const index = this.entityIds.indexOf(id)\n\n      this.entities.splice(index, 1)\n      this.entityIds.splice(index, 1)\n\n      this.entitiesCount -= 1\n    }\n\n    this.entitiesPendingRemoval = []\n\n    if (this.entitiesCount < 0) {\n      return (this.entitiesCount = 0)\n    }\n  }\n}\n","class GameOverScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'game-over'\n    this.playAgainEventBound = false\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.input.addEventListener('.play-again', 'click', () => {\n      this.ui.transitionTo('playing')\n    })\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass IdentScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'ident'\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    window.setTimeout(() => {\n      return this.ui.transitionTo('title')\n    }, 2500)\n\n    return this\n  }\n}\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass PlayingScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'playing'\n    this.updatesInBackGround = true\n    this.levelUpInterval = 5000\n    this.maxLevel = 50\n    this.maxDiameterAsPercentageOfScreen = 15\n    this.maxLineWidth = 5\n    this.pointsPerPop = 10\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.ui.registerElement('comboMultiplierCounter', '.hud-value-combo')\n    this.ui.registerElement('levelCounter', '.hud-value-level')\n    this.ui.registerElement('scoreCounter', '.hud-value-score')\n\n    this.comboMultiplier = 0\n    this.level = 1\n    this.score = 0\n\n    this.setupLevelUpIncrement()\n\n    this.setHeadsUpValues()\n\n    this.targetBubblesCount = 0\n\n    this.playing = true\n\n    this.setupDifficultyConfig()\n\n    return this\n  }\n\n  decrementTargetBubblesCount() {\n    this.targetBubblesCount -= 1\n\n    if (this.targetBubblesCount < 0) {\n      this.targetBubblesCount = 0\n    }\n\n    return this\n  }\n\n  gameOver() {\n    this.ui.transitionTo('game-over')\n    this.input.removeAllEntities()\n\n    return this\n  }\n\n  generateBubble() {\n    if (\n      this.playing &&\n      randomPercentage() < this.difficultyConfig.bubbleSpawnChance.current\n    ) {\n      const bubbleConfig = this.newBubbleConfig()\n      const bubble = new BubbleEntity(this, bubbleConfig)\n\n      if (bubble.isTarget) {\n        this.addEntity(bubble)\n        this.input.addEntity(bubble)\n      } else {\n        this.addEntity(bubble, true)\n      }\n\n      if (bubble.isTarget) {\n        this.targetBubblesCount += 1\n      }\n    }\n\n    return this\n  }\n\n  newBubbleConfig() {\n    return {\n      bubbleGrowthMultiplier: this.difficultyConfig.bubbleGrowthMultiplier\n        .current,\n      chanceBubbleIsTarget: this.difficultyConfig.chanceBubbleIsTarget.current,\n      diameterMax: this.difficultyConfig.diameterMax.current,\n      maxTargetsAtOnce: this.difficultyConfig.maxTargetsAtOnce.current,\n      minTargetDiameter: this.difficultyConfig.minTargetDiameter.current,\n      targetVelocityMultiplier: this.difficultyConfig.targetVelocityMultiplier\n        .current,\n      velocityMax: this.difficultyConfig.velocityMax.current,\n      velocityMin: this.difficultyConfig.velocityMin.current,\n      maxLineWidth: this.maxLineWidth,\n      playing: this.playing,\n      targetBubblesCount: this.targetBubblesCount,\n    }\n  }\n\n  setupDifficultyConfig() {\n    const maxDiameter =\n      this.device.screen.width / 100 * this.maxDiameterAsPercentageOfScreen\n\n    this.difficultyConfig = {\n      bubbleGrowthMultiplier: { current: 0, easy: 1.05, difficult: 1.1 },\n      bubbleSpawnChance: { current: 0, easy: 60, difficult: 100 },\n      chanceBubbleIsTarget: { current: 0, easy: 50, difficult: 90 },\n      diameterMax: {\n        current: 0,\n        easy: maxDiameter,\n        difficult: maxDiameter * 0.6,\n      },\n      maxTargetsAtOnce: { current: 0, easy: 3, difficult: 6 },\n      minTargetDiameter: {\n        current: 0,\n        easy: maxDiameter * 0.7,\n        difficult: maxDiameter * 0.4,\n      },\n      targetVelocityMultiplier: { current: 0, easy: 0.3, difficult: 0.5 },\n      velocityMax: { current: 0, easy: 4, difficult: 7 },\n      velocityMin: { current: 0, easy: -4, difficult: -7 },\n    }\n\n    this.updateValuesForDifficulty()\n\n    return this\n  }\n\n  setHeadsUpValues() {\n    updateUITextNode(\n      this.ui.element('comboMultiplierCounter'),\n      this.comboMultiplier,\n    )\n    updateUITextNode(this.ui.element('levelCounter'), this.level)\n    updateUITextNode(\n      this.ui.element('scoreCounter'),\n      formatWithComma(this.score),\n    )\n\n    return this\n  }\n\n  setupLevelUpIncrement() {\n    this.levelUpCounter = window.setInterval(() => {\n      this.updateLevel()\n    }, this.levelUpInterval)\n\n    return this\n  }\n\n  stopLevelUpIncrement() {\n    window.clearInterval(this.levelUpCounter)\n\n    return this\n  }\n\n  unload() {\n    if (this.playing === true) {\n      for (let bubble of Array.from(this.entities)) {\n        bubble.destroying = true\n      }\n\n      this.playing = false\n\n      return this.stopLevelUpIncrement()\n    }\n  }\n\n  update() {\n    super.update(...arguments)\n\n    this.generateBubble()\n\n    return this\n  }\n\n  updateComboMultiplier(targetHit) {\n    if (targetHit) {\n      this.comboMultiplier += 1\n    } else {\n      this.comboMultiplier = 0\n    }\n\n    this.setHeadsUpValues()\n\n    return this\n  }\n\n  updateLevel() {\n    this.level += 1\n\n    if (this.level >= this.maxLevel) {\n      window.clearInterval(this.levelUpCounter)\n    }\n\n    this.setHeadsUpValues()\n\n    this.updateValuesForDifficulty()\n\n    return this\n  }\n\n  updateScore(sizeWhenTapped, sizeWhenFullyGrown) {\n    // ((defaultScorePerPop + (100 - ((sizeWhenTapped / sizeWhenFullyGrown) * 100))) * comboMultiplier) * (levelNumber + 1)\n\n    const targetSizeBonus = Math.round(\n      100 - sizeWhenTapped / sizeWhenFullyGrown * 100,\n    )\n    const popPointValue = this.pointsPerPop + targetSizeBonus\n    const levelMultiplier = this.level + 1\n\n    this.score += popPointValue * this.comboMultiplier * levelMultiplier\n\n    this.setHeadsUpValues()\n\n    return this\n  }\n\n  updateValuesForDifficulty() {\n    const levelMulitplier = this.level / this.maxLevel\n\n    for (let propertyName in this.difficultyConfig) {\n      const propertyValues = this.difficultyConfig[propertyName]\n      const valueDifference = propertyValues.difficult - propertyValues.easy\n      const adjustedValue =\n        valueDifference * levelMulitplier + propertyValues.easy\n\n      this.difficultyConfig[propertyName].current = adjustedValue\n    }\n\n    return this\n  }\n}\n","class TitleScene extends Scene {\n  constructor() {\n    super(...arguments)\n\n    this.id = 'title'\n\n    return this\n  }\n\n  load() {\n    super.load(...arguments)\n\n    this.input.addEventListener('.game-logo', 'click', () => {\n      this.ui.transitionTo('playing')\n    })\n\n    return this\n  }\n\n  unload() {\n    super.unload(...arguments)\n\n    return this\n  }\n}\n","class BubbleEntity extends Entity {\n  constructor(parent, configValues) {\n    super(...arguments)\n\n    this.parent = parent\n    this.configValues = configValues\n\n    this.height = 0\n    this.id = `bubble_${Math.random()\n      .toString(36)\n      .substr(2, 5)}`\n    this.position = {\n      x: this.device.screen.width / 2,\n      y: this.device.screen.height / 2,\n    }\n    this.velocity = {\n      x: random(this.configValues.velocityMin, this.configValues.velocityMax),\n      y: random(this.configValues.velocityMin, this.configValues.velocityMax),\n    }\n    this.width = 0\n\n    this.alpha = 0.75\n    this.color = randomColor()\n    this.destroying = false\n    this.diameter = 1\n    this.fillColor = this.color\n    this.strokeColor = this.color\n    this.finalDiameter = randomInteger(0, configValues.diameterMax)\n    this.isTarget = this.determineTargetBubble()\n    this.radius = 0.5\n    this.shrinkMultiplier = 0.9\n\n    if (this.isTarget) {\n      this.alpha = 0.9\n      this.fillColor = '240, 240, 240'\n      this.finalDiameter = randomInteger(\n        this.configValues.minTargetDiameter,\n        this.configValues.diameterMax,\n      )\n      this.lineWidth = this.diameter / 10\n\n      this.velocity.x *= this.configValues.targetVelocityMultiplier\n      this.velocity.y *= this.configValues.targetVelocityMultiplier\n    }\n\n    return this\n  }\n\n  canvasExitCallback() {\n    super.canvasExitCallback(...arguments)\n\n    if (this.isTarget) {\n      this.parent.gameOver()\n    }\n\n    return this\n  }\n\n  determineTargetBubble() {\n    if (\n      this.configValues.targetBubblesCount < this.configValues.maxTargetsAtOnce\n    ) {\n      return randomPercentage() < this.configValues.chanceBubbleIsTarget\n    }\n\n    return false\n  }\n\n  render() {\n    this.context.lineWidth = this.lineWidth\n    this.context.fillStyle = rgba(this.fillColor, this.alpha)\n    this.context.strokeStyle = rgba(this.strokeColor, this.alpha)\n\n    this.context.beginPath()\n    this.context.arc(\n      this.position.x,\n      this.position.y,\n      this.radius,\n      0,\n      Math.PI * 2,\n      true,\n    )\n    this.context.fill()\n    if (this.isTarget) {\n      this.context.stroke()\n    }\n    this.context.closePath()\n\n    return this\n  }\n\n  tapHandler(targetHit) {\n    this.parent.updateComboMultiplier(targetHit)\n\n    if (targetHit) {\n      this.parent.updateScore(this.diameter, this.finalDiameter)\n      this.destroying = true\n      this.parent.decrementTargetBubblesCount()\n      this.input.queueEntityForRemoval(this.id)\n    }\n\n    return this\n  }\n\n  update() {\n    super.update(...arguments)\n\n    if (this.destroying) {\n      this.diameter *= this.parent.playing ? 0.6 : this.shrinkMultiplier\n\n      if (this.diameter < 1) {\n        this.removeSelfFromParent()\n      }\n    } else if (this.diameter < this.finalDiameter) {\n      this.diameter *= this.configValues.bubbleGrowthMultiplier\n    }\n\n    this.diameter = clamp(this.diameter, 0, this.finalDiameter)\n    if (this.isTarget) {\n      this.lineWidth = clamp(\n        this.diameter / 10,\n        0,\n        this.configValues.maxLineWidth,\n      )\n    }\n\n    this.height = this.diameter\n    this.width = this.diameter\n    this.radius = this.diameter / 2\n\n    this.position.x += this.animationLoop.correctValue(this.velocity.x)\n    this.position.y += this.animationLoop.correctValue(this.velocity.y)\n\n    this.addSelfToRenderQueue()\n\n    return this\n  }\n\n  wasTapped() {\n    let message\n    const { touchData } = this.input\n\n    const tapX = touchData.x\n    const tapY = touchData.y\n    const distanceX = tapX - this.position.x\n    const distanceY = tapY - this.position.y\n    const tapped =\n      distanceX * distanceX + distanceY * distanceY < this.radius * this.radius\n\n    if (tapped) {\n      message = `Bubble#${this.id} tapped at ${tapX}, ${tapY}`\n    } else {\n      message = 'Combo Broken!'\n    }\n\n    debugConsole(message)\n\n    return tapped\n  }\n}\n","// Load the main app wrapper\nconst App = new Application()\n\n// Get up get on get up get on up stay on the scene etc etc\nApp.load()\n"]}